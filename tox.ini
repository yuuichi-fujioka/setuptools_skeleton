[tox]
minversion = 1.6
skipsdist = True
envlist = py26,py27,py33,pep8

[testenv]
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
install_command = pip install -U --allow-external pytidylib --allow-insecure pytidylib --allow-external netifaces --allow-insecure netifaces {opts} {packages}
usedevelop = True
setenv = VIRTUAL_ENV={envdir}
         EVENTLET_NO_GREENDNS=yes
         PYTHONHASHSEED=0
commands =
   python setup.py testr --slowest --testr-args="{posargs}"
whitelist_externals = bash

[testenv:py33]
deps = -r{toxinidir}/requirements-py3.txt
       -r{toxinidir}/test-requirements-py3.txt
commands = python -m testtools.run \
         skeleton.tests.test_utils

[testenv:cover]
commands = bash -x {toxinidir}/setup-test-env.sh python setup.py testr --slowest --coverage --testr-args="{posargs}"

[testenv:pep8]
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
	   flake8
commands =
    flake8 {posargs}

[testenv:genconfig]
commands =
    /bin/mkdir -p etc/skeleton
    oslo-config-generator --namespace skeleton --output-file etc/skeleton/skeleton.conf

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:venv]
commands = {posargs}

[testenv:debug]
commands =
   bash -x {toxinidir}/setup-test-env.sh {toxinidir}/tools/debug_helper.sh {posargs}

[flake8]
# H305 imports not grouped correctly
ignore = H305
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,tools,build
show-source = True

